import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_ease_buzz/EaseBuzz14March2023/ease_buzz_accesskey.dart';

class EaseBuzz14MarchHome extends StatefulWidget {
  const EaseBuzz14MarchHome({Key? key}) : super(key: key);

  @override
  State<EaseBuzz14MarchHome> createState() => _EaseBuzz14MarchHomeState();
}

class _EaseBuzz14MarchHomeState extends State<EaseBuzz14MarchHome> {
  final MethodChannel _channel = const MethodChannel('easebuzz');

  bool isPaymentLoading = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.brown.shade100,
      appBar: AppBar(
        backgroundColor: Colors.brown.shade500,
        title: const Text("EaseBuzzPayment"),
        centerTitle: true,
        elevation: 0.0,
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: () async {
            setState(() => isPaymentLoading = true);
            String? accessKey = await easeBuzzAccessKeys();

            if (accessKey != null && accessKey.isNotEmpty) {
              String payMode = "test";
              Object parameters = {
                "access_key": accessKey,
                "pay_mode": payMode,
              };
              final paymentResponse = await _channel.invokeMethod(
                "payWithEasebuzz",
                parameters,
              );
              debugPrint('paymentResponse => $paymentResponse');
            }

            setState(() => isPaymentLoading = false);
          },
          child: isPaymentLoading
              ? const SizedBox(
                  width: 20,
                  height: 20,
                  child: CircularProgressIndicator(
                    backgroundColor: Colors.white,
                    strokeWidth: 3,
                  ),
                )
              : const Text("Payment"),
        ),
      ),
    );
  }
}

/*
        onPressed: () async
        {
          String access_key = "Access key generated by the Initiate Payment API";
          String pay_mode = "test";
          Object parameters =
          {
            "access_key":access_key,
            "pay_mode":pay_mode
          };
          final payment_response = await _channel.invokeMethod("payWithEasebuzz", parameters);

          debugPrint('payment_response => ${payment_response}');

        },
*/
